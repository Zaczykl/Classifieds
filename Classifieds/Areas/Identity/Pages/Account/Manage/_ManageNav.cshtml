@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profil</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Hasło</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ManageClassifiedNavClass(ViewContext)" asp-page="./ManageClassifieds">Twoje ogłoszenia</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ManageClassifiedInactiveNavClass(ViewContext)" asp-page="./ManageClassifiedsInactive">Nieaktywne ogłoszenia</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
</ul>
